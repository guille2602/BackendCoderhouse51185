paths:
  /api/carts:
    post:
        summary: Crea un nuevo documento carrito
        tags:
          - Carts
        responses:
          "200":
            description: Carrito creado correctamente
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "sucess"
                    payload:
                      type: object
                      $ref: '#components/schema/Cart'
          "500":
            description: Error interno del servidor
  /api/carts/{cid}:
    get:
      summary: Devuelve un objeto con la información del carrito
      tags: 
      - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cid es el id del carrito que se quiere obtener
          schema:
            $type: string
      responses:
        "200":
          description: Devuelve información del carrito
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: sucess
                  payload:
                    type: object
                    $ref: '#components/schema/Cart'
        "400":
          description: Se ha proporcionado un id incorrecto o inexistente.
        "500":
          description: Error interno del servidor
    put:
      summary: Actualiza un carrito con la información enviada desde body.
      tags: 
      - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cid es el id del carrito que se quiere obtener
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#components/requestBodies/updateCart'
      responses:
        "200":
          description: Solicitud de actualización de carrito correcta, puede contener productos rechazados, se debe revisar el payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  payload:
                    type: object
                    properties:
                      acknowledged: 
                        description: Indica si el id fue reconocido como correcto
                        type: boolean
                        example: true
                      modifiedCount: 
                        description: Indica si se produjeron cambios respecto al documento original
                        type: number
                        example: 1
                      upsertedId:
                        type: string
                        example: null
                      upsertedCount:
                        type: number
                        example: 0
                      matchedCount:
                        description: Indica si el id proporcionado fue encontrado en la base de datos
                        type: number
                        example: 1
        "400":
          description: La solicitud no ha superado las validaciones.
        "401":
          description: Error, no se encuentra logueado.
        "403":
          description: Error, se intenta agregar productos al carrito de otro usuario.
        "500":
          description: Error interno del servidor
    delete:
      summary: Vacía el carrito.
      tags: 
      - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cid es el id del carrito que se quiere obtener
          schema:
            $type: string
      responses:
        "200":
          description: Se ha vaciado el carrito correctamente.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: number
                    example: 200
                  payload:
                    type: object
                    properties:
                      acknowledged: 
                        description: Indica si el id fue reconocido como correcto
                        type: boolean
                        example: true
                      modifiedCount: 
                        description: Indica si se produjeron cambios respecto al documento original
                        type: number
                        example: 1
                      upsertedId:
                        type: string
                        example: null
                      upsertedCount:
                        type: number
                        example: 0
                      matchedCount:
                        description: Indica si el id proporcionado fue encontrado en la base de datos
                        type: number
                        example: 1
        "400":
          description: La solicitud no ha superado la validación de id.
        "401":
          description: Error, no se encuentra logueado.
        "403":
          description: Error, se intenta agregar productos al carrito de otro usuario.
        "500":
          description: Error interno del servidor
  /api/carts/{cid}/products/{pid}:
    post:
      summary: Agrega el producto pasado por params al carrito
      tags: 
      - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cid es el id del carrito que se quiere obtener
          schema:
            $type: string
        - name: pid
          in: path
          required: true
          description: pid es el id del producto que se quiere agregar
          schema:
            $type: string
      responses:
        "200":
          description: Solicitud de actualización de carrito correcta.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "sucess"
                  payload:
                    type: object
                    properties:
                      acknowledged: 
                        description: Indica si el id fue reconocido como correcto
                        type: boolean
                        example: true
                      modifiedCount: 
                        description: Indica si se produjeron cambios respecto al documento original
                        type: number
                        example: 1
                      upsertedId:
                        type: string
                        example: null
                      upsertedCount:
                        type: number
                        example: 0
                      matchedCount:
                        description: Indica si el id proporcionado fue encontrado en la base de datos
                        type: number
                        example: 1
        "400":
          description: La solicitud no ha superado las validaciones.
        "401":
          description: Error, no se encuentra logueado.
        "403":
          description: Error, se intenta agregar productos al carrito de otro usuario.
        "500":
          description: Error interno del servidor
    put:
      summary: Modifica la cantidad de un determinado producto en el carrito
      tags: 
      - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cid es el id del carrito que se quiere modificar
          schema:
            $type: string
        - name: pid
          in: path
          required: true
          description: pid es el id del producto que se quiere modificar
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#components/requestBodies/updateProductInCart'
      responses:
        "200":
          description: Solicitud de actualización de carrito correcta.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "sucess"
                  payload:
                    type: object
                    properties:
                      acknowledged: 
                        description: Indica si el id fue reconocido como correcto
                        type: boolean
                        example: true
                      modifiedCount: 
                        description: Indica si se produjeron cambios respecto al documento original
                        type: number
                        example: 1
                      upsertedId:
                        type: string
                        example: null
                      upsertedCount:
                        type: number
                        example: 0
                      matchedCount:
                        description: Indica si el id proporcionado fue encontrado en la base de datos
                        type: number
                        example: 1
        "400":
          description: La solicitud no ha superado las validaciones.
        "401":
          description: Error, no se encuentra logueado.
        "403":
          description: Error, se intenta modificar productos del carrito de otro usuario.
        "500":
          description: Error interno del servidor
    delete:
      summary: Elimina el producto indicado del carrito
      tags: 
      - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cid es el id del carrito que se quiere modificar
          schema:
            $type: string
        - name: pid
          in: path
          required: true
          description: pid es el id del producto que se quiere modificar
          schema:
            $type: string
      responses:
        "200":
          description: Se ha eliminado el producto del carrito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "sucess"
                  payload:
                    type: object
                    properties:
                      acknowledged: 
                        description: Indica si el id fue reconocido como correcto
                        type: boolean
                        example: true
                      modifiedCount: 
                        description: Indica si se produjeron cambios respecto al documento original
                        type: number
                        example: 1
                      upsertedId:
                        type: string
                        example: null
                      upsertedCount:
                        type: number
                        example: 0
                      matchedCount:
                        description: Indica si el id proporcionado fue encontrado en la base de datos
                        type: number
                        example: 1
        "400":
          description: La solicitud no ha superado las validaciones.
        "401":
          description: Error, no se encuentra logueado.
        "403":
          description: Error, se intenta eliminar productos del carrito de otro usuario.
        "500":
          description: Error interno del servidor
  /api/carts/{cid}/purchase:
    post:
      summary: Finaliza el proceso de compra y genera un ticket con la información del mismo
      tags: 
      - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: cid es el id del carrito que se quiere modificar
          schema:
            $type: string
      responses:
        "200":
          description: Se ha eliminado el producto del carrito.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Sucess0"
                  message:
                    type: string
                    example: "Ticket creado correctamente"
                  ticket:
                    description: Ticket con los datos de la compra.
                    type: object
                    properties:
                      code:
                        type: string
                        example: 878a29ac-4320-4fcf-ae63-913194e8ba1e
                      purchase_datetime:
                        type: string
                        example: 7/8/2023, 12:01:26
                      amount:
                        type: number 
                        example: 90
                  accepted:
                    description: Son los productos que han superado el proceso de validación de stock y fueron agregados al ticket de compra.
                    type: array
                    items:
                      type: object
                      $ref: '#components/schema/Cart'
                  rejected:
                    description: Son los productos rechazados en el proceso de validación de stock y no fueron agregados al ticket de compra.
                    type: array
                    items:
                      type: object
                      $ref: '#components/schema/Cart'
                  payload:
                    type: object
                    properties:
                      code:
                        type: string
                        example: 878a29ac-4320-4fcf-ae63-913194e8ba1e
                      purchase_datetime:
                        type: string
                        example: 7/8/2023, 12:01:26
                      amount:
                        type: number 
                        example: 90
                      _id:
                        type: ObjectId
                        example: ObjectId('64d107462af3b84072e3cd0a')
        "400":
          description: La solicitud no ha superado las validaciones.
        "401":
          description: Error, no se encuentra logueado.
        "403":
          description: Error, se intenta finalizar la compra de otro usuario.
        "500":
          description: Error interno del servidor

components:
  schema:
    Cart:
      type: object
      properties:
        products: 
          type: array
          description: Arreglo de productos agregados al carrito
          items:
            type: object
            properties:
              product: ObjectId
              quantity: number
        _id:
          type: ObjectId
          description: Id de producto generado por base de datos.
      example: 
        products:
          [{
            product: ObjectId('64583f030ff1c8a93caed839'),
            quantity: 5
          }]
        _id: ObjectId('64d02fbd395103f36000d26e')
  requestBodies:
    updateCart:
      type: object
      properties:
        products:
          description: Arreglo de productos y cantidades a agregar al carrito
          type: array
          items:
            type: object
            properties:
              product: 
                type: ObjectId
                description: Id del producto a agregar al carrito
              quantity:
                type: number
                description: Cantidad del producto a ingresar en el carrito.
      example: {
        products: [
          {
            product: {
                _id: "64583f030ff1c8a93caed839"
            },
            quantity: 4
        },
        {
            product: {
                _id: "645bda4e18579662c5695a70"
            },
            quantity: 2
        }]
      }
    updateProductInCart:
      type: object
      properties:
        quantity:
          description: Cantidad del producto que se agregaran al carrito
          type: string
          example: 10

        